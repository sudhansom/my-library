stages:
  - build
  - lint
  - test
  - publish
  - deploy

variables:
  DOCKER_IMAGE: gcr.io/$GCP_PROJECT_ID/$GCP_CLOUD_RUN_NAME

ng-build:
  stage: build
  image: node:16-slim
  script:
    - npm install
    - npm run build ng-components
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - dist/
  tags:
    - x86_64
    - docker

ng-lint:
  stage: lint
  image: node:16-slim
  script:
    - npm install
    - npm run lint
  tags:
    - x86_64
    - docker

ng-test:
  stage: test
  image: node:16-slim
  script:
    - npm install
    - npm run test:ci
  tags:
    - x86_64
    - docker

ng-publish:
  stage: publish
  image: node:16-slim
  script:
    - cd dist/ng-components
    - npm config set -- "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken" "${CI_JOB_TOKEN}"
    - npm config set @sitemule:registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    - npm publish
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - dist/
  only:
    - tags
  tags:
    - x86_64
    - docker


deploy-storybook:
  stage: deploy
  only:
    - main
  image: google/cloud-sdk:latest
  script:
    - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT
    - gcloud auth configure-docker
    - gcloud config set project $GCP_PROJECT_ID
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
    - gcloud run deploy $GCP_CLOUD_RUN_NAME --image $DOCKER_IMAGE --region=europe-north1 --platform managed --port 80 --allow-unauthenticated
  tags:
    - x86_64
    - docker
